from __future__ import annotations
import cocotb.handle
import cocotb.types
from typing import overload, Literal

# This file was automatically generated by copra
# It provides type stubs for your HDL design for use with cocotb

class Fixedtb(cocotb.handle.HierarchyObject):
    a: cocotb.handle.RealObject
    a_fixed: cocotb.handle.LogicArrayObject
    b: cocotb.handle.RealObject
    b_fixed: cocotb.handle.LogicArrayObject
    div: cocotb.handle.RealObject
    div_fixed: cocotb.handle.LogicArrayObject
    mul: cocotb.handle.RealObject
    mul_fixed: cocotb.handle.LogicArrayObject
    sub: cocotb.handle.RealObject
    sub_fixed: cocotb.handle.LogicArrayObject
    sum: cocotb.handle.RealObject
    sum_fixed: cocotb.handle.LogicArrayObject

    @overload
    def __getitem__(self, name: Literal['a']) -> cocotb.handle.RealObject: ...

    @overload
    def __getitem__(self, name: Literal['a_fixed']) -> cocotb.handle.LogicArrayObject: ...

    @overload
    def __getitem__(self, name: Literal['b']) -> cocotb.handle.RealObject: ...

    @overload
    def __getitem__(self, name: Literal['b_fixed']) -> cocotb.handle.LogicArrayObject: ...

    @overload
    def __getitem__(self, name: Literal['div']) -> cocotb.handle.RealObject: ...

    @overload
    def __getitem__(self, name: Literal['div_fixed']) -> cocotb.handle.LogicArrayObject: ...

    @overload
    def __getitem__(self, name: Literal['mul']) -> cocotb.handle.RealObject: ...

    @overload
    def __getitem__(self, name: Literal['mul_fixed']) -> cocotb.handle.LogicArrayObject: ...

    @overload
    def __getitem__(self, name: Literal['sub']) -> cocotb.handle.RealObject: ...

    @overload
    def __getitem__(self, name: Literal['sub_fixed']) -> cocotb.handle.LogicArrayObject: ...

    @overload
    def __getitem__(self, name: Literal['sum']) -> cocotb.handle.RealObject: ...

    @overload
    def __getitem__(self, name: Literal['sum_fixed']) -> cocotb.handle.LogicArrayObject: ...

    @overload
    def __getitem__(self, name: str) -> cocotb.handle.SimHandleBase: ...

