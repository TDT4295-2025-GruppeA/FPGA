from __future__ import annotations
import cocotb.handle
import cocotb.types
from typing import overload, Literal

# This file was automatically generated by copra
# It provides type stubs for your HDL design for use with cocotb

class Matmul(cocotb.handle.HierarchyObject):
    K: cocotb.handle.LogicArrayObject
    M: cocotb.handle.LogicArrayObject
    N: cocotb.handle.LogicArrayObject
    i: cocotb.handle.LogicArrayObject
    j: cocotb.handle.LogicArrayObject
    k: cocotb.handle.LogicArrayObject
    l: cocotb.handle.ArrayObject[cocotb.types.Array[cocotb.types.LogicArray], cocotb.handle.ArrayObject[cocotb.types.LogicArray, cocotb.handle.LogicArrayObject]]
    o: cocotb.handle.ArrayObject[cocotb.types.Array[cocotb.types.LogicArray], cocotb.handle.ArrayObject[cocotb.types.LogicArray, cocotb.handle.LogicArrayObject]]
    r: cocotb.handle.ArrayObject[cocotb.types.Array[cocotb.types.LogicArray], cocotb.handle.ArrayObject[cocotb.types.LogicArray, cocotb.handle.LogicArrayObject]]

    @overload
    def __getitem__(self, name: Literal['K']) -> cocotb.handle.LogicArrayObject: ...

    @overload
    def __getitem__(self, name: Literal['M']) -> cocotb.handle.LogicArrayObject: ...

    @overload
    def __getitem__(self, name: Literal['N']) -> cocotb.handle.LogicArrayObject: ...

    @overload
    def __getitem__(self, name: Literal['i']) -> cocotb.handle.LogicArrayObject: ...

    @overload
    def __getitem__(self, name: Literal['j']) -> cocotb.handle.LogicArrayObject: ...

    @overload
    def __getitem__(self, name: Literal['k']) -> cocotb.handle.LogicArrayObject: ...

    @overload
    def __getitem__(self, name: Literal['l']) -> cocotb.handle.ArrayObject[cocotb.types.Array[cocotb.types.LogicArray], cocotb.handle.ArrayObject[cocotb.types.LogicArray, cocotb.handle.LogicArrayObject]]: ...

    @overload
    def __getitem__(self, name: Literal['o']) -> cocotb.handle.ArrayObject[cocotb.types.Array[cocotb.types.LogicArray], cocotb.handle.ArrayObject[cocotb.types.LogicArray, cocotb.handle.LogicArrayObject]]: ...

    @overload
    def __getitem__(self, name: Literal['r']) -> cocotb.handle.ArrayObject[cocotb.types.Array[cocotb.types.LogicArray], cocotb.handle.ArrayObject[cocotb.types.LogicArray, cocotb.handle.LogicArrayObject]]: ...

    @overload
    def __getitem__(self, name: str) -> cocotb.handle.SimHandleBase: ...

