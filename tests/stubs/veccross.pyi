from __future__ import annotations
import cocotb.handle
import cocotb.types
from typing import overload, Literal

# This file was automatically generated by copra
# It provides type stubs for your HDL design for use with cocotb

class Veccross(cocotb.handle.HierarchyObject):
    lhs: cocotb.handle.ArrayObject[cocotb.types.LogicArray, cocotb.handle.LogicArrayObject]
    out: cocotb.handle.ArrayObject[cocotb.types.LogicArray, cocotb.handle.LogicArrayObject]
    rhs: cocotb.handle.ArrayObject[cocotb.types.LogicArray, cocotb.handle.LogicArrayObject]

    @overload
    def __getitem__(self, name: Literal['lhs']) -> cocotb.handle.ArrayObject[cocotb.types.LogicArray, cocotb.handle.LogicArrayObject]: ...

    @overload
    def __getitem__(self, name: Literal['out']) -> cocotb.handle.ArrayObject[cocotb.types.LogicArray, cocotb.handle.LogicArrayObject]: ...

    @overload
    def __getitem__(self, name: Literal['rhs']) -> cocotb.handle.ArrayObject[cocotb.types.LogicArray, cocotb.handle.LogicArrayObject]: ...

    @overload
    def __getitem__(self, name: str) -> cocotb.handle.SimHandleBase: ...

